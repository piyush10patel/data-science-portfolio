import json
import boto3
import pandas as pd

def either_caller(event):
    body = ""
    try:
        body = json.loads(event['body'])
    except KeyError:
        body = event
    return body

def lambda_handler(event, context):
    body = either_caller(event)
    region = 'us-east-1'
    function_name = 'get_sig_vars9599'
    
    try:
        lambda_client = boto3.client('lambda', region_name=region)
        response = lambda_client.invoke(
            FunctionName=function_name,
            InvocationType='RequestResponse'
        )
        response_payload = response['Payload'].read().decode('utf-8')
        res_data = json.loads(response_payload)
        
        sig_data = pd.DataFrame(res_data)
        dates = sig_data['Date']
        var95_avgd = sig_data['var95'].tolist()
        var99_avgd = sig_data['var99'].tolist()
        avg95 = sig_data['var95'].mean()
        avg99 = sig_data['var99'].mean()
        
        str_d = '|'.join(dates)
        str_95 = ','.join(map(str, var95_avgd))
        str_avg95 = ','.join([str(avg95)] * len(dates))
        str_99 = ','.join(map(str, var99_avgd))
        str_avg99 = ','.join([str(avg99)] * len(dates))
        
        labels = "95% Risk Value|99% Risk Value|Average 95%|Average 99%"
        chart_colors = "00FF00,FF0000,0000FF,FFA500"
        chart_line_styles = "2|2|2,2,2|3,2,2"
        
        chart_url = (
            f"https://image-charts.com/chart?"
            f"cht=lc&chs=800x400&chd=a:{str_95}|{str_99}|{str_avg95}|{str_avg99}"
            f"&chxt=x,y&chdl={labels}&chxl=0:|{str_d}&chxs=0,min90"
            f"&chco={chart_colors}&chls={chart_line_styles}"
        )
        return chart_url
    except Exception as e:
        return str(e)
